{"version":3,"sources":["App.js","index.js","logo.png"],"names":["App","taskName","setTaskName","useState","subtasks","setSubtasks","reminders","setReminders","allTasks","setAllTasks","selectedDate","setSelectedDate","Date","showDateTimePicker","setShowDateTimePicker","selectedDateTime","setSelectedDateTime","selectedTask","setSelectedTask","currentTaskHeader","setCurrentTaskHeader","useEffect","async","window","permission","Notification","requestPermission","console","log","error","requestNotificationPermission","savedReminders","localStorage","getItem","JSON","parse","map","reminder","date","notified","setItem","stringify","checkReminders","showAll","arguments","length","undefined","now","forEach","reminderTime","showNotification","updateReminderNotificationStatus","timeDiff","Math","abs","prev","r","task","getTime","intervalId","setInterval","clearInterval","notification","header","body","duration","icon","badge","requireInteraction","silent","timestamp","onclick","focus","close","Audio","play","catch","e","alert","submitTask","key","type","response","fetch","method","headers","Content-Type","task_name","ok","tasksWithHeader","json","generateICSFile","startDateTime","moment","format","endDateTime","add","icsData","downloadICSFile","generateCombinedICSFile","icsContent","id","content","filename","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","React","className","src","logo","alt","Calendar","onChange","value","index","target","onKeyDown","placeholder","onClick","addAllTasksToCalendar","subtask","openDateTimePicker","Datetime","toDate","inputProps","readOnly","timeFormat","dateFormat","closeOnSelect","scheduleAllTasks","currentDateTime","newReminders","parseInt","random","addSingleTaskToCalendar","newReminder","filter","container","getElementById","createRoot","render","StrictMode","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.45389bb7.chunk.js","sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport \"./App.css\";\r\nimport logo from \"./logo.png\";\r\n\r\nfunction App() {\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [subtasks, setSubtasks] = useState([]);\r\n  const [reminders, setReminders] = useState([]);\r\n  const [allTasks, setAllTasks] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [showDateTimePicker, setShowDateTimePicker] = useState(false);\r\n  const [selectedDateTime, setSelectedDateTime] = useState(new Date());\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskHeader, setCurrentTaskHeader] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const requestNotificationPermission = async () => {\r\n      try {\r\n        if (\"Notification\" in window) {\r\n          const permission = await Notification.requestPermission();\r\n          console.log(\"Notification permission status:\", permission);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error requesting notification permission:\", error);\r\n      }\r\n    };\r\n    requestNotificationPermission();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedReminders = localStorage.getItem(\"taskReminders\");\r\n    if (savedReminders) {\r\n      setReminders(\r\n        JSON.parse(savedReminders).map((reminder) => ({\r\n          ...reminder,\r\n          date: new Date(reminder.date),\r\n          notified: reminder.notified || false,\r\n        }))\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"taskReminders\", JSON.stringify(reminders));\r\n  }, [reminders]);\r\n\r\n  const checkReminders = (showAll = false) => {\r\n    const now = new Date();\r\n    reminders.forEach((reminder) => {\r\n      const reminderTime = new Date(reminder.date);\r\n      if (!showAll) {\r\n        const timeDiff = Math.abs(now - reminderTime) / (1000 * 60);\r\n        if (!reminder.notified && now >= reminderTime && timeDiff <= 1) {\r\n          showNotification(reminder);\r\n          updateReminderNotificationStatus(reminder, reminderTime);\r\n        }\r\n      } else if (!reminder.notified && now >= reminderTime) {\r\n        showNotification(reminder);\r\n        updateReminderNotificationStatus(reminder, reminderTime);\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateReminderNotificationStatus = (reminder, reminderTime) => {\r\n    setReminders((prev) =>\r\n      prev.map((r) =>\r\n        r.task === reminder.task &&\r\n        new Date(r.date).getTime() === reminderTime.getTime()\r\n          ? { ...r, notified: true }\r\n          : r\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkReminders(false);\r\n    const intervalId = setInterval(() => checkReminders(false), 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, [reminders]);\r\n\r\n  const showNotification = (reminder) => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(`Task Reminder: ${reminder.header}\\n${reminder.task}`);\r\n      return;\r\n    }\r\n\r\n    if (Notification.permission === \"granted\") {\r\n      try {\r\n        const notification = new Notification(\r\n          `Task Reminder: ${reminder.header}`,\r\n          {\r\n            body: `It's time for: ${reminder.task}\\nDuration: ${reminder.duration}`,\r\n            icon: \"/favicon.ico\",\r\n            badge: \"/favicon.ico\",\r\n            requireInteraction: true,\r\n            silent: false,\r\n            timestamp: new Date().getTime(),\r\n          }\r\n        );\r\n\r\n        notification.onclick = () => {\r\n          window.focus();\r\n          notification.close();\r\n        };\r\n\r\n        const audio = new Audio(\"/notification-sound.mp3\");\r\n        audio.play().catch((e) => console.log(\"Error playing sound:\", e));\r\n      } catch (error) {\r\n        alert(`Task Reminder: ${reminder.header}\\n${reminder.task}`);\r\n      }\r\n    } else {\r\n      alert(`Task Reminder: ${reminder.header}\\n${reminder.task}`);\r\n    }\r\n  };\r\n\r\n  const submitTask = async (e) => {\r\n    if (e.key === \"Enter\" || e.type === \"click\") {\r\n      if (!taskName) {\r\n        alert(\"Please enter a task name.\");\r\n        return;\r\n      }\r\n      try {\r\n        const response = await fetch(\r\n          \"https://stepwise.onrender.com/generate_tasks\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ task_name: taskName }),\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const tasksWithHeader = data.subtasks.map((task) => ({\r\n            ...task,\r\n            header: taskName,\r\n          }));\r\n          setSubtasks(tasksWithHeader);\r\n          setAllTasks(tasksWithHeader);\r\n          setCurrentTaskHeader(taskName);\r\n          setTaskName(\"\");\r\n        } else {\r\n          alert(\"Error generating tasks. Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert(\"Error generating tasks. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const openDateTimePicker = (task) => {\r\n    setSelectedTask(task);\r\n    setSelectedDateTime(new Date());\r\n    setShowDateTimePicker(true);\r\n  };\r\n\r\n  const addAllTasksToCalendar = () => {\r\n    setShowDateTimePicker(true);\r\n    setSelectedTask(\"all\");\r\n  };\r\n\r\n  const scheduleAllTasks = () => {\r\n    let currentDateTime = new Date(selectedDateTime);\r\n    const newReminders = subtasks.map((task) => {\r\n      const duration = parseInt(task[1]);\r\n      const reminder = {\r\n        task: task[0],\r\n        duration: task[1],\r\n        date: new Date(currentDateTime),\r\n        header: currentTaskHeader,\r\n        notified: false,\r\n        id: Date.now() + Math.random(),\r\n      };\r\n\r\n      currentDateTime = new Date(\r\n        currentDateTime.getTime() + duration * 60 * 60 * 1000\r\n      );\r\n      return reminder;\r\n    });\r\n\r\n    setReminders((prev) => [...prev, ...newReminders]);\r\n    generateCombinedICSFile(newReminders);\r\n    setSubtasks([]);\r\n    setShowDateTimePicker(false);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const addSingleTaskToCalendar = () => {\r\n    if (!selectedTask) return;\r\n\r\n    const newReminder = {\r\n      task: selectedTask[0],\r\n      duration: selectedTask[1],\r\n      date: new Date(selectedDateTime),\r\n      header: selectedTask.header,\r\n      notified: false,\r\n      id: Date.now(),\r\n    };\r\n\r\n    setReminders((prev) => [...prev, newReminder]);\r\n    setSubtasks((prev) => prev.filter((task) => task[0] !== selectedTask[0]));\r\n    generateICSFile(newReminder);\r\n    setShowDateTimePicker(false);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const generateICSFile = (reminder) => {\r\n    const startDateTime = moment(reminder.date).format(\"YYYYMMDDTHHmmss\");\r\n    const endDateTime = moment(reminder.date)\r\n      .add(reminder.duration, \"hours\")\r\n      .format(\"YYYYMMDDTHHmmss\");\r\n\r\n    const icsData = `BEGIN:VCALENDAR\r\nVERSION:2.0\r\nBEGIN:VEVENT\r\nSUMMARY:${reminder.header}: ${reminder.task}\r\nDTSTART:${startDateTime}\r\nDTEND:${endDateTime}\r\nDESCRIPTION:${reminder.task}\r\nEND:VEVENT\r\nEND:VCALENDAR`;\r\n\r\n    downloadICSFile(icsData, `${reminder.task}.ics`);\r\n  };\r\n\r\n  const generateCombinedICSFile = (reminders) => {\r\n    let icsContent = `BEGIN:VCALENDAR\r\nVERSION:2.0\r\nPRODID:-//Your Company//Your Product//EN\\n`;\r\n\r\n    reminders.forEach((reminder) => {\r\n      const startDateTime = moment(reminder.date).format(\"YYYYMMDDTHHmmss\");\r\n      const endDateTime = moment(reminder.date)\r\n        .add(reminder.duration, \"hours\")\r\n        .format(\"YYYYMMDDTHHmmss\");\r\n\r\n      icsContent += `BEGIN:VEVENT\r\nSUMMARY:${reminder.header}: ${reminder.task}\r\nDTSTART:${startDateTime}\r\nDTEND:${endDateTime}\r\nDESCRIPTION:${reminder.task}\r\nUID:${reminder.id}@yourapp.com\r\nSEQUENCE:0\r\nSTATUS:CONFIRMED\r\nEND:VEVENT\\n`;\r\n    });\r\n\r\n    icsContent += \"END:VCALENDAR\";\r\n    downloadICSFile(icsContent, `${reminders[0].header}_tasks.ics`);\r\n  };\r\n\r\n  const downloadICSFile = (content, filename) => {\r\n    const blob = new Blob([content], { type: \"text/calendar;charset=utf-8\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <header className=\"app-header\">\r\n        <img src={logo} alt=\"StepWise Logo\" className=\"logo\" />\r\n      </header>\r\n\r\n      <div className=\"content\">\r\n        <div className=\"left-panel\">\r\n          <div className=\"calendar-section\">\r\n            <Calendar\r\n              onChange={setSelectedDate}\r\n              value={selectedDate}\r\n              className=\"calendar\"\r\n            />\r\n          </div>\r\n          <div className=\"reminders-section\">\r\n            <h3>Scheduled Tasks</h3>\r\n            <div className=\"reminders-list\">\r\n              {reminders.map((reminder, index) => (\r\n                <div key={index} className=\"reminder-item\">\r\n                  <p className=\"reminder-header\">{reminder.header}</p>\r\n                  <p className=\"reminder-task\">{reminder.task}</p>\r\n                  <p className=\"reminder-duration\">{reminder.duration}</p>\r\n                  <p className=\"reminder-date\">\r\n                    {moment(reminder.date).format(\"MMMM D, YYYY h:mm A\")}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"center-panel\">\r\n          <h1 className=\"main-heading\">We Got a Plan For You</h1>\r\n          <div className=\"search-container\">\r\n            <input\r\n              type=\"text\"\r\n              value={taskName}\r\n              onChange={(e) => setTaskName(e.target.value)}\r\n              onKeyDown={submitTask}\r\n              placeholder=\"Enter your project/task name\"\r\n              className=\"search-input\"\r\n            />\r\n            <button onClick={submitTask} className=\"search-button\">\r\n              Plan It\r\n            </button>\r\n          </div>\r\n\r\n          {subtasks.length > 0 && (\r\n            <div className=\"subtasks-container\">\r\n              <h2 className=\"current-task-header\">{currentTaskHeader}</h2>\r\n              <div className=\"add-all-button-container\">\r\n                <button\r\n                  onClick={addAllTasksToCalendar}\r\n                  className=\"add-all-button\"\r\n                >\r\n                  Add All Tasks to Calendar\r\n                </button>\r\n              </div>\r\n              {subtasks.map((subtask, index) => (\r\n                <div key={index} className=\"subtask-card\">\r\n                  <div className=\"subtask-content\">\r\n                    <p className=\"subtask-name\">{subtask[0]}</p>\r\n                    <p className=\"subtask-time\">Estimated time: {subtask[1]}</p>\r\n                  </div>\r\n                  <button\r\n                    className=\"calendar-button\"\r\n                    onClick={() => openDateTimePicker(subtask)}\r\n                  >\r\n                    Add to Calendar\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h3>All Steps</h3>\r\n          <div className=\"all-tasks-list\">\r\n            {allTasks.map((task, index) => (\r\n              <div key={index} className=\"all-task-item\">\r\n                <span className=\"task-number\">{index + 1}.</span>\r\n                <span className=\"task-name\">{task[0]}</span>\r\n                <span className=\"task-duration\">{task[1]}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showDateTimePicker && (\r\n        <div className=\"datetime-picker-modal\">\r\n          <div className=\"datetime-picker-content\">\r\n            <h3>Select Date and Time</h3>\r\n            <Datetime\r\n              value={selectedDateTime}\r\n              onChange={(value) => setSelectedDateTime(value.toDate())}\r\n              className=\"datetime-picker\"\r\n              inputProps={{\r\n                placeholder: \"Select date and time\",\r\n                readOnly: true,\r\n              }}\r\n              timeFormat=\"hh:mm A\"\r\n              dateFormat=\"MMMM D, YYYY\"\r\n              closeOnSelect={false}\r\n            />\r\n            <div className=\"datetime-picker-buttons\">\r\n              <button\r\n                onClick={() =>\r\n                  selectedTask === \"all\"\r\n                    ? scheduleAllTasks()\r\n                    : addSingleTaskToCalendar()\r\n                }\r\n                className=\"confirm-btn\"\r\n              >\r\n                Confirm\r\n              </button>\r\n              <button\r\n                onClick={() => setShowDateTimePicker(false)}\r\n                className=\"cancel-btn\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <footer className=\"app-footer\">\r\n        <p>&copy; 2025 StepWise. All rights reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { createRoot } from \"react-dom/client\"; // Import createRoot\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\n// Get the root element\r\nconst container = document.getElementById(\"root\");\r\n\r\n// Create a root\r\nconst root = createRoot(container);\r\n\r\n// Render the App component\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.bfb9d52c.png\";"],"sourceRoot":""}